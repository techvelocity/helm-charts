apiVersion: apps/v1
kind: Deployment
metadata:  
  name: {{ include "app.name" .}}
  labels:
  {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      name: {{ include "chart.name" . }}
  template:
    metadata:
      labels:
        name:  {{ include "chart.name" . }}
      {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: {{ .Values.env.registryAuth.name }}
          value: {{ .Values.env.registryAuth.value | quote }}
        - name: {{ .Values.env.registryAuthRealm.name }}
          value: {{ .Values.env.registryAuthRealm.value | quote }}
        - name: {{ .Values.env.registryAuthPath.name }}
          value: {{ .Values.env.registryAuthPath.value | quote }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name:  {{ include "chart.name" . }}
        ports:
        - containerPort: {{ .Values.registryContainerPort }}
          protocol: TCP
        resources: {{- toYaml .Values.registryResources | nindent 10 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /auth
          name: {{ .Values.secrets.registryAuthName }}
        - mountPath: /var/lib/registry
          name: {{ .Values.volume.pvcName }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: {{ .Values.secrets.registryAuthName }}
        secret:
          defaultMode: 420
          secretName: {{ .Values.secrets.registryAuthName }}
      - name: {{ .Values.volume.pvcName }}
        persistentVolumeClaim:
          claimName: {{ .Values.volume.pvcName }}
