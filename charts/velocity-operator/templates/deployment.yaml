apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-manager
  labels:
    control-plane: controller-manager
  {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      control-plane: controller-manager
    {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
      {{- include "chart.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
        checksum/secret: {{ include (print $.Template.BasePath "/manager-secrets.yaml") . | sha256sum }}
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: {{ .Values.controllerManager.kubeRbacProxy.image.repository }}:{{ .Values.controllerManager.kubeRbacProxy.image.tag }}
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources: {{- toYaml .Values.controllerManager.kubeRbacProxy.resources | nindent
          10 }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag
          | default .Chart.AppVersion }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        env:
          - name: AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ include "chart.fullname" . }}-manager-secret
                key: authToken
          - name: DRY_RUN
            value: {{ quote .Values.controllerManager.manager.env.dryRun }}
          - name: CHART_VERSION
            value: {{ quote .Chart.Version }}
          - name: CLOUD_RESOURCES_ENABLED
            value: {{ quote .Values.tags.cloudResources }}
          - name: AWS_REGION
            value: {{ .Values.aws.region }}
          {{- if .Values.tags.cloudResources }}
          - name: AWS_SHARED_CREDENTIALS_FILE
            value: {{ include "aws.credentials.path" . }}
          {{- end }}
          {{- if ((.Values.velocity).apiUrl) }}
          - name: VELOCITY_API_URL
            value: {{ quote .Values.velocity.apiUrl }}
          {{- end }}
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.controllerManager.manager.resources | nindent 10 }}
        {{- if .Values.tags.cloudResources }}
        volumeMounts:
          - name: {{ .Values.aws.creds.k8sSecretName }}
            mountPath: {{ include "aws.credentials.secret_mount_path" . }}
            readOnly: true
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
      serviceAccountName: {{ include "chart.fullname" . }}-manager
      terminationGracePeriodSeconds: 10
      {{- if .Values.tags.cloudResources }}
      volumes:
        - name: {{ .Values.aws.creds.k8sSecretName }}
          secret:
            secretName: {{ .Values.aws.creds.k8sSecretName }}
      {{- end }}
